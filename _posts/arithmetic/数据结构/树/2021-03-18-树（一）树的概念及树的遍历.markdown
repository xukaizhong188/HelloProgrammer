---
layout: post
title: 树（一）树的概念及树的遍历!
date:  2021-03-15
Author: XKZ
categories: jekyll update
tags: [数据结构,算法，树]
comments: true
---
## 1、树的概念
### 1.1、节点的度和层次
对于一个结点，拥有的子树数（结点有多少分支）称为结点的度（Degree）
## 2、树的节点表示（实现）
### 2.1、拉链法
此方法存放的是树的左右节点

    public class TreeNode {
        int value;
        /**
        * 左节点
        */
        TreeNode leftNode;
        /**
        * 右节点
        */
        TreeNode rightNode;
    }

### 2.2、数组下标
此方法存放的树的左右节点的数组下标

    public class TreeNode2 {
        int value;
        int leftNum;
        int rightNume;
    }

## 3.树的实现
有了树的节点，那么就可以创建一棵树了，树的主要方法有：    
创建、添加节点、删除节点、清空、遍历、获取树的高度、获得树的节点树、获取树的节点的父节点
### 3.1、创建
数的创建只需要加入根节点，以及设置根节点的方法即可。
### 3.2、添加节点
因为二叉树有左右节点，所以添加节点又分为添加左节点和右节点
### 3.3、删除节点
删除某一个节点只需要将某个节点设置为null即可，同时为了减少gc，我们还需要将该节点的子树也进行删除
### 3.4、清空
二叉树的情况就是将根节点删除
### 3.5、获取二叉树的高度
获取二叉树的高度的本质就是各个节点度的最大值
## 2、树的遍历
树的遍历方式分为前、中、后序遍历以及层序遍历
![img](https://xukaizhong188.github.io/HelloProgrammer/images/2021-03-18/树.png)
### 2.1、前序遍历
前序遍历首先访问根节点，然后遍历左子树，最后遍历右子树。
前序遍历结果：FBADCEGIH
### 2.2、中序遍历
中序遍历是先遍历左子树，然后访问根节点，然后遍历右子树。
前序遍历结果：ABCDEFGHI
### 2.3、后续遍历
后序遍历是先遍历左子树，然后遍历右子树，最后访问树的根节点。
后序遍历结果：ACEDBHIGF



