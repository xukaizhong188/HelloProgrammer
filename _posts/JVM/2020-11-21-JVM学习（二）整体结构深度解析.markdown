---
layout: post
title: JVM学习（二）整体结构深度解析
date:  2020-11-21
Author: XKZ
categories: jekyll update
tags: [JVM]
comments: true
---
# 一、JDK体系结构
![img](https://xukaizhong188.github.io/HelloProgrammer/images/2020-11-21/p3.png)
# 二、Java语言的跨平台性
![img](https://xukaizhong188.github.io/HelloProgrammer/images/2020-11-21/p4.png)
# 三、JVM整体结构及内存模型
![img](https://xukaizhong188.github.io/HelloProgrammer/images/2020-11-21/p7.jpeg)
## 1、JVM的组成
java虚拟机由类加载子系统、运行时数据区域（内存模型）、字节码执行引擎三部分组成。其中运行时数据区域包含：堆、方法区、程序计数器、java虚拟机栈、本地方法栈。   
当一个类运行时，首先会由类加载子系统将类加载到运行时数据区域，然后会通过字节码执行引擎进行系统的运算执行。
## 2、Java运行时数据区域
![img](https://xukaizhong188.github.io/HelloProgrammer/images/2020-11-21/p5.png)
### 2.1、堆
new的对象一般都是放在堆中，
java调优更多的是对堆内存的调优
堆内存主要包含survivor(eden、from、to)、老年代量两块区域，其中老年代占3分之2。
### 2.2、栈
虚拟机栈也叫做线程栈，是程序运行过程中放置局部变量的，有一个线程执行就会在这个部分分配一块这个线程专属的区域。   
此栈类似于数据结构的栈，都是先进后出的，这个和程序执行顺序也是一样的。   
当程序运行时会先在栈上为一个线程分配一块大内存，当执行一个方法的时候，在这块区域会再分配一块区域，存放这个方法的局部变量，这一块就是一个栈帧内存区域。一个方法就是对应一个栈针。
栈帧中除了存放局部变量表外，还存放了操作数栈、动态链接、方法出口。
- 局部变量表：存放局部变量
- 操作数栈：就是在执行过程的操作的变量的中转站
- 动态链接：
- 方法出口：程序方法执行完要返回到哪里去。
### 2.3本地方法栈
java 在调用本地方法的时候分配的内存空间。
### 方法区
在jdk1.8之前叫做永久代，在jdk1.8之后叫做元空间。主要存放常量、静态变量、类元信息
常量：
类元信息：类的元组成信息，组成这个类的代码
静态变量：
对象组成部分：
    对象头：
        makword 标记字段：自身运行时的哈希值、GC分代年龄、锁状态、线程持有锁、偏向线程ID、偏向时间戳
        对象类型指针：类的元数据指针，指向所属类
        数组长度：只有数组对象才有

### 程序计数器
程序运行的行号指示器

    
![img](https://xukaizhong188.github.io/HelloProgrammer/images/2020-11-21/p6.png)



